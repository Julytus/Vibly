server:
  port: ${POST_SERVICE_PORT:9004}
  servlet:
    context-path: /post
spring:
  kafka:
    topics:
      new-post: "new-post-topic"
    bootstrap-servers: "${KAFKA_SERVERS:localhost:9094}"
    consumer:
      group-id: ${KAFKA_GROUP_ID:post-group}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: "*"
  data:
    mongodb:
      uri: ${SPRING_DATA_MONGODB_URI:mongodb://root:root@localhost:27017/post_service?authSource=admin}
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    timeout: 60000
  cache:
    type: redis
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
      profile-service:
        url: ${PROFILE_SERVICE_URL:http://localhost:9002/profile}
minio:
  url: ${MINIO_URL:http://localhost:9000}
  access-key: ${MINIO_ACCESS_KEY:minioadmin}
  secret-key: ${MINIO_SECRET_KEY:minioadmin}
  bucket: ${MINIO_BUCKET:post}